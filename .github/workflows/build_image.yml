name: build_image

on:
  push:
    branches:
      - 'master'

jobs:
  docker:
    runs-on: ubuntu-22.04
    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.0
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: true

      - name: "Checkout source code"
        uses: "actions/checkout@v4"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=true
            type=raw,value={{date 'YYYYMMDD'}},enable=true,priority=1000
            type=sha,format=short,prefix=,enable=true
          flavor: latest=false

      - name: Set up version
        id: getversion
        run: |
          tags=(${{ steps.meta.outputs.tags }})
          tag=${tags[0]}
          version=$(echo ${tags[0]} | cut -d ':' -f 2)
          echo ${version}
          echo "tag=${tag}" >> $GITHUB_OUTPUT
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "rootfs=ubuntu-impi-${version}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export rootfs
        run: |
          docker export $(docker create ${{ steps.getversion.outputs.tag }}) | gzip > ${{ steps.getversion.outputs.rootfs }}.tar.gz
          md5sum ${{ steps.getversion.outputs.rootfs }}.tar.gz > ${{ steps.getversion.outputs.rootfs }}.md5

      - name: Upload rootfs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.getversion.outputs.rootfs }}.tar.gz
          path: ${{ steps.getversion.outputs.rootfs }}.tar.gz
          if-no-files-found: error

      - name: Upload rootfs md5sum
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.getversion.outputs.rootfs }}.md5
          path: ${{ steps.getversion.outputs.rootfs }}.md5
          if-no-files-found: error
